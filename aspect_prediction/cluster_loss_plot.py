import matplotlib.pyplot as plt
import numpy as np

ss=np.array([0.10369324466140313, 0.1189680094592512, 0.12071252933006016, 0.12893181398873713, 0.10359377139208252, 0.11173182021250673, 0.11446107656518781, 0.11088762004437504, 0.11665252451360272, 0.09236436752365298, 0.1163783261447677, 0.0902450444916512, 0.10008803301633332])
# ss=(ss-np.mean(ss))/np.std(ss)

# ch=np.array([151.26004562818298, 137.20998516180478, 122.9839158106348, 109.81491149784209, 98.14271197627455, 93.13669536456189, 85.59155206754237, 82.35901583640624, 78.25234538272933, 73.21749239697495, 69.67062670121972, 66.41418352143512, 63.710940965197])
# ch=(ss-np.mean(ch))/np.std(ch)

dbs=np.array([2.5433658884553463, 2.3153362245144686, 2.5078473936366583, 2.135052219038468, 2.621550659976475, 2.4196020458717364, 2.6807143846717287, 2.4429911173199956, 2.438689958667776, 2.5375365973075534, 2.472886807706295, 2.6123673122286957, 2.464830443809476])
# dbs=(dbs-np.mean(dbs))/np.std(dbs)

x=range(3,16)

plt.plot(x,ss,label='ss',linewidth=2,color='r',marker='o')
# plt.plot(x,ch,label='ch',linewidth=2,color='g',marker='v')
plt.plot(x,dbs,label='dbs',linewidth=2,color='b',marker='d')

plt.xlabel('k of cluster')
plt.ylabel('metric value')

plt.title('metrics with different clusters')
plt.legend()
plt.show()